function synthesis_result = SynthesizeTANDEM_STRAIGHT_default(x, fs)
start_tic = tic;
x = x(:,1); %   Make sure it is a comum vector.
r = exF0candidatesTSTRAIGHTGB(x,fs); % Extract F0 information
x_denoised = removeLF(x,fs,r.f0,r.periodicityLevel); % Low frequency noise remover
r_denoised = exF0candidatesTSTRAIGHTGB(x_denoised,fs);
rc = autoF0Tracking(r_denoised,x_denoised); % Clean F0 trajectory by tracking
rc.vuv = refineVoicingDecision(x_denoised,rc);
q = aperiodicityRatioSigmoid(x,rc,1,2,0); % aperiodicity extraction
f = exSpectrumTSTRAIGHTGB(x,fs,q);
STRAIGHTobject.waveform = x_denoised;
STRAIGHTobject.samplingFrequency = fs;
STRAIGHTobject.refinedF0Structure.temporalPositions = r.temporalPositions;
STRAIGHTobject.SpectrumStructure.spectrogramSTRAIGHT = f.spectrogramSTRAIGHT;
STRAIGHTobject.refinedF0Structure.vuv = rc.vuv;
f.spectrogramSTRAIGHT = unvoicedProcessing(STRAIGHTobject);
s2 = exGeneralSTRAIGHTsynthesisR2(q,f); % new implementation
synthesis_result.synthesis_out = s2.synthesisOut;
synthesis_result.elapsed_time = toc(start_tic);
end